<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:context="http://www.springframework.org/schema/context"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns="http://www.springframework.org/schema/beans"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

	<context:component-scan base-package="com.mmhouse.pork" />
	<!-- 
	<mvc:annotation-driven>
        <mvc:argument-resolvers>
            <bean class="com.mmhouse.pork.common.CustomMapArgumentResolver"></bean>       
        </mvc:argument-resolvers>
    </mvc:annotation-driven>
    
      -->
      
    <!-- 
    	Client 접속 요청시 Controller로 가기전에 요청을 Intercept해서 해당 사용자의 세션등을 체크하여
    	서비스 분기를 위한 사용자 정의 Interceptor bean객체 생성
    -->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**"/>
			<bean id="loggerInterceptor" class="com.mmhouse.pork.common.logger.LoggerInterceptor"></bean>
		</mvc:interceptor>
	</mvc:interceptors>
	
	 
    <bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping"/>
    
    <bean class="org.springframework.web.servlet.view.BeanNameViewResolver" p:order="0" />
    <bean id="jsonView" class="org.springframework.web.servlet.view.json.MappingJacksonJsonView" />    
    
    <bean
    	class="org.springframework.web.servlet.view.UrlBasedViewResolver" p:order="1" 
    	p:viewClass="org.springframework.web.servlet.view.JstlView" 
    	p:prefix="/WEB-INF/jsp/pork/" p:suffix=".jsp">
   	</bean>
   	
   	<!-- MultipartResolver 설정 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="100000000" />
        <property name="maxInMemorySize" value="100000000" />
        <!-- <property name="uploadTempDir" ref="uploadDirResource" /> -->     
    </bean>
    
    <!-- <bean id="uploadDirResource" class="org.springframework.core.io.FileSystemResource">
        <constructor-arg>
            <value>E:/file/upload/</value>
        </constructor-arg>
    </bean>
    -->
</beans>



